// Code generated by mockery v2.40.1. DO NOT EDIT.

package mocks

import (
	models "pokt_gateway_server/pkg/pokt/pokt_v0/models"

	mock "github.com/stretchr/testify/mock"
)

// SessionRegistryService is an autogenerated mock type for the SessionRegistryService type
type SessionRegistryService struct {
	mock.Mock
}

type SessionRegistryService_Expecter struct {
	mock *mock.Mock
}

func (_m *SessionRegistryService) EXPECT() *SessionRegistryService_Expecter {
	return &SessionRegistryService_Expecter{mock: &_m.Mock}
}

// GetSession provides a mock function with given fields: req
func (_m *SessionRegistryService) GetSession(req *models.GetSessionRequest) (*models.GetSessionResponse, error) {
	ret := _m.Called(req)

	if len(ret) == 0 {
		panic("no return value specified for GetSession")
	}

	var r0 *models.GetSessionResponse
	var r1 error
	if rf, ok := ret.Get(0).(func(*models.GetSessionRequest) (*models.GetSessionResponse, error)); ok {
		return rf(req)
	}
	if rf, ok := ret.Get(0).(func(*models.GetSessionRequest) *models.GetSessionResponse); ok {
		r0 = rf(req)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.GetSessionResponse)
		}
	}

	if rf, ok := ret.Get(1).(func(*models.GetSessionRequest) error); ok {
		r1 = rf(req)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SessionRegistryService_GetSession_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetSession'
type SessionRegistryService_GetSession_Call struct {
	*mock.Call
}

// GetSession is a helper method to define mock.On call
//   - req *models.GetSessionRequest
func (_e *SessionRegistryService_Expecter) GetSession(req interface{}) *SessionRegistryService_GetSession_Call {
	return &SessionRegistryService_GetSession_Call{Call: _e.mock.On("GetSession", req)}
}

func (_c *SessionRegistryService_GetSession_Call) Run(run func(req *models.GetSessionRequest)) *SessionRegistryService_GetSession_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*models.GetSessionRequest))
	})
	return _c
}

func (_c *SessionRegistryService_GetSession_Call) Return(_a0 *models.GetSessionResponse, _a1 error) *SessionRegistryService_GetSession_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *SessionRegistryService_GetSession_Call) RunAndReturn(run func(*models.GetSessionRequest) (*models.GetSessionResponse, error)) *SessionRegistryService_GetSession_Call {
	_c.Call.Return(run)
	return _c
}

// NewSessionRegistryService creates a new instance of SessionRegistryService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewSessionRegistryService(t interface {
	mock.TestingT
	Cleanup(func())
}) *SessionRegistryService {
	mock := &SessionRegistryService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
